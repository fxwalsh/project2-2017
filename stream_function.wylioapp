{"main":"[{\"type\":\"tab\",\"id\":\"ab0f0af7.750688\",\"label\":\"Flow 1\"},{\"id\":\"66983f4e.01fd9\",\"type\":\"webserver\",\"z\":\"ab0f0af7.750688\",\"name\":\"Weather Server\",\"port\":\"3000\",\"websocket\":true},{\"id\":\"6cf7f665.8180c8\",\"type\":\"serial-port\",\"z\":\"ab0f0af7.750688\",\"serialport\":\"/dev/ttyACM0\",\"serialbaud\":\"57600\",\"databits\":\"8\",\"parity\":\"none\",\"stopbits\":\"1\",\"newline\":\"\\\\n\",\"bin\":\"false\",\"out\":\"char\",\"addchar\":false},{\"id\":\"41fda74b.05baa8\",\"type\":\"receivesignal\",\"z\":\"ab0f0af7.750688\",\"name\":\"threshold\",\"signal\":\"threshold\",\"x\":108,\"y\":154,\"wires\":[[\"a5e90ae9.8012f8\",\"f2b4edf1.2089e\"]]},{\"id\":\"2a8ebff1.39686\",\"type\":\"receivesignal\",\"z\":\"ab0f0af7.750688\",\"name\":\"switch\",\"signal\":\"switch\",\"x\":106,\"y\":212,\"wires\":[[\"a5e90ae9.8012f8\",\"8c01e96e.5bd668\"]]},{\"id\":\"a5e90ae9.8012f8\",\"type\":\"function\",\"z\":\"ab0f0af7.750688\",\"name\":\"setOutput\",\"func\":\"context.temp = context.temp || 0.0;\\ncontext.switch = context.switch || false;\\n\\nif (msg.signal === 'switch') {\\n  context.switch= msg.payload;\\n} else if (msg.signal === 'threshold') {\\n  context.temp = msg.payload;\\n}\\nconsole.log(context.temp)\\nif (context.temp >= 70.0 && context.switch==1) {\\n  return {topic: 'state', payload: 'over 70 and switch on'}\\n} else {\\n  return {topic: 'state', payload: 'under 70 and/or switch off'}\\n}\\nreturn msg;\",\"outputs\":1,\"noerr\":0,\"x\":376,\"y\":175,\"wires\":[[\"df58346.aa76ac8\"]]},{\"id\":\"df58346.aa76ac8\",\"type\":\"print\",\"z\":\"ab0f0af7.750688\",\"name\":\"\",\"active\":true,\"field\":\"\",\"complete\":\"true\",\"x\":532,\"y\":130,\"wires\":[]},{\"id\":\"f2b4edf1.2089e\",\"type\":\"print\",\"z\":\"ab0f0af7.750688\",\"name\":\"\",\"active\":true,\"field\":\"\",\"complete\":\"true\",\"x\":327,\"y\":80,\"wires\":[]},{\"id\":\"8c01e96e.5bd668\",\"type\":\"print\",\"z\":\"ab0f0af7.750688\",\"name\":\"\",\"active\":true,\"field\":\"\",\"complete\":\"true\",\"x\":270,\"y\":299,\"wires\":[]}]","language":"streams","title":"weather_data","date":1490910860462,"firmware":"/*\r\n  Software serial multple serial test\r\n\r\n Receives from the hardware serial, sends to software serial.\r\n Receives from software serial, sends to hardware serial.\r\n\r\n The circuit:\r\n * RX is digital pin 10 (connect to TX of other device)\r\n * TX is digital pin 11 (connect to RX of other device)\r\n\r\n Note:\r\n Not all pins on the Mega and Mega 2560 support change interrupts,\r\n so only the following can be used for RX:\r\n 10, 11, 12, 13, 50, 51, 52, 53, 62, 63, 64, 65, 66, 67, 68, 69\r\n\r\n Not all pins on the Leonardo and Micro support change interrupts,\r\n so only the following can be used for RX:\r\n 8, 9, 10, 11, 14 (MISO), 15 (SCK), 16 (MOSI).\r\n\r\n created back in the mists of time\r\n modified 25 May 2012\r\n by Tom Igoe\r\n based on Mikal Hart's example\r\n\r\n This example code is in the public domain.\r\n\r\n */\r\n#include <SoftwareSerial.h>\r\n\r\nSoftwareSerial mySerial(10, 11); // RX, TX\r\n\r\nvoid setup() {\r\n  // Open serial communications and wait for port to open:\r\n  Serial.begin(57600);\r\n  while (!Serial) {\r\n    ; // wait for serial port to connect. Needed for native USB port only\r\n  }\r\n\r\n\r\n  Serial.println(\"Goodnight moon!\");\r\n}\r\n\r\nvoid loop() { // run over and over\r\n  if (mySerial.available()) {\r\n    Serial.write(mySerial.read());\r\n  }\r\n  if (Serial.available()) {\r\n    mySerial.write(Serial.read());\r\n  }\r\n}","dashboard":[{"title":"temp","color":"#e54225","properties":{"title":"","minAxisValue":0,"maxAxisValue":1000,"axisName":""},"style":"thermometer"},{"title":"threshold","color":"#e54225","properties":{"title":"threshold","minimum_value":0,"maximum_value":100,"step":1},"style":"slider"},{"title":"switch","color":"#e54225","properties":{"title":"switch","push":false},"style":"switch"}]}